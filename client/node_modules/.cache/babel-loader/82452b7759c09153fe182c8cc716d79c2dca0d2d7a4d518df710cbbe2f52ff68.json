{"ast":null,"code":"var _jsxFileName = \"/home/udimkpa/Documents/final-project-app-dev/client/src/charts/DoughnutChart.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState, useContext } from 'react';\nimport { Chart as ChartJS, ArcElement } from 'chart.js';\nimport 'chart.js/auto';\nimport { SessionContext } from '../contexts/SessionContext';\n// import { BudgetDisplayContext } from '../contexts/BudgetDisplayContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement);\nlet myDoughnutChart;\nfunction DoughnutChart() {\n  _s();\n  const {\n    loggedIn,\n    username\n  } = useContext(SessionContext);\n  const [hasData, setHasData] = useState(false);\n  function createChart(data_source) {\n    if (hasData) {\n      var ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n      if (myDoughnutChart) {\n        myDoughnutChart.destroy();\n      }\n      myDoughnutChart = new ChartJS(ctx, {\n        type: 'doughnut',\n        data: data_source\n      });\n    }\n  }\n  ;\n  function getBudget() {\n    console.log('Display budget!');\n    const db_name = loggedIn ? 'personal-budget' : 'guest-budget';\n    axios.post('http://localhost:3010/display', {\n      db_name: db_name,\n      username: username\n    }).then(data => {\n      data !== undefined ? setHasData(true) : setHasData(false);\n      if (hasData) createChart(data.data[0]);\n    });\n  }\n  ;\n\n  // useEffect(() => {\n  //   getBudget();\n  // }, []);\n  getBudget();\n  console.log(hasData);\n  return hasData ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myChart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this) : null\n  // : <canvas id=\"myChart\"/>\n  ;\n}\n_s(DoughnutChart, \"66rtmNKsDwBgKfsKKmWmTPr9v7w=\");\n_c = DoughnutChart;\nexport default DoughnutChart;\nvar _c;\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"names":["axios","React","useState","useContext","Chart","ChartJS","ArcElement","SessionContext","jsxDEV","_jsxDEV","register","myDoughnutChart","DoughnutChart","_s","loggedIn","username","hasData","setHasData","createChart","data_source","ctx","document","getElementById","getContext","destroy","type","data","getBudget","console","log","db_name","post","then","undefined","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/udimkpa/Documents/final-project-app-dev/client/src/charts/DoughnutChart.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useState, useContext } from 'react';\nimport { Chart as ChartJS, ArcElement } from 'chart.js';\nimport 'chart.js/auto';\nimport { SessionContext } from '../contexts/SessionContext';\n// import { BudgetDisplayContext } from '../contexts/BudgetDisplayContext';\n\nChartJS.register(ArcElement);\n\nlet myDoughnutChart;\n\nfunction DoughnutChart() {\n  const { loggedIn, username } = useContext(SessionContext);\n  const [hasData, setHasData] = useState(false);\n  \n  function createChart(data_source) {\n    if (hasData) {\n      var ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n        if (myDoughnutChart) {\n          myDoughnutChart.destroy();\n        }\n        \n        myDoughnutChart = new ChartJS(ctx, {\n        type: 'doughnut',\n        data: data_source,\n      });\n    }\n  };\n\n  function getBudget() {\n  \tconsole.log('Display budget!');\n  \n  \tconst db_name = (loggedIn) ? 'personal-budget' : 'guest-budget';\n\n    axios.post('http://localhost:3010/display',\n      {\n        db_name: db_name,\n        username: username\n      }\n    )\n    .then((data) => {\n      (data !== undefined) ? setHasData(true) : setHasData(false);\n\n      if (hasData) createChart(data.data[0]);\n    });\n  };\n  \n  // useEffect(() => {\n  //   getBudget();\n  // }, []);\n  getBudget();\n  console.log(hasData);\n\n  return (\n    (hasData) ?\n    <div className=\"chart-container\">\n        <canvas id=\"myChart\"/>\n    </div>\n    : null\n    // : <canvas id=\"myChart\"/>\n  )\n}\n\nexport default DoughnutChart;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,KAAK,IAAIC,OAAO,EAAEC,UAAU,QAAQ,UAAU;AACvD,OAAO,eAAe;AACtB,SAASC,cAAc,QAAQ,4BAA4B;AAC3D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEAJ,OAAO,CAACK,QAAQ,CAACJ,UAAU,CAAC;AAE5B,IAAIK,eAAe;AAEnB,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGZ,UAAU,CAACI,cAAc,CAAC;EACzD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE7C,SAASgB,WAAWA,CAACC,WAAW,EAAE;IAChC,IAAIH,OAAO,EAAE;MACX,IAAII,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;MAC3D,IAAIZ,eAAe,EAAE;QACnBA,eAAe,CAACa,OAAO,CAAC,CAAC;MAC3B;MAEAb,eAAe,GAAG,IAAIN,OAAO,CAACe,GAAG,EAAE;QACnCK,IAAI,EAAE,UAAU;QAChBC,IAAI,EAAEP;MACR,CAAC,CAAC;IACJ;EACF;EAAC;EAED,SAASQ,SAASA,CAAA,EAAG;IACpBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAE9B,MAAMC,OAAO,GAAIhB,QAAQ,GAAI,iBAAiB,GAAG,cAAc;IAE9Dd,KAAK,CAAC+B,IAAI,CAAC,+BAA+B,EACxC;MACED,OAAO,EAAEA,OAAO;MAChBf,QAAQ,EAAEA;IACZ,CACF,CAAC,CACAiB,IAAI,CAAEN,IAAI,IAAK;MACbA,IAAI,KAAKO,SAAS,GAAIhB,UAAU,CAAC,IAAI,CAAC,GAAGA,UAAU,CAAC,KAAK,CAAC;MAE3D,IAAID,OAAO,EAAEE,WAAW,CAACQ,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC;EACJ;EAAC;;EAED;EACA;EACA;EACAC,SAAS,CAAC,CAAC;EACXC,OAAO,CAACC,GAAG,CAACb,OAAO,CAAC;EAEpB,OACGA,OAAO,gBACRP,OAAA;IAAKyB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC5B1B,OAAA;MAAQ2B,EAAE,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC,GACJ;EACF;EAAA;AAEJ;AAAC3B,EAAA,CAlDQD,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AAoDtB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}