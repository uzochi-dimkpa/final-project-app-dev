{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState, createContext, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nconst LoginContext = /*#__PURE__*/createContext({\n  loggedIn: false,\n  setLoggedIn: () => {}\n});\nfunction LoginHook(bool) {\n  _s();\n  // console.log('LoginHook!');\n  let [loggedIn, setLoggedIn] = useState();\n  const value = {\n    loggedIn,\n    setLoggedIn\n  };\n  setLoggedIn(bool);\n\n  // const switchLoginState = () => {\n  //   setLoggedIn(bool);\n  // }\n\n  // Navigate\n  // const navigate = useNavigate();\n\n  // Login\n  // const login = () => {\n  //   console.log('Login!');\n\n  //   setLoggedIn(true);\n\n  //   axios.post('http://localhost:3010/login', data)\n  //   .then((data) => {\n  //     console.log(data);\n  //     // window.location.href = '/'\n  //     (data.data && data.data !== 'BAD_USERNAME') ? navigate('/') :\n  //       (data.data === 'BAD_USERNAME') ? alert('This user does not exist! Pleas try again with a different username') :\n  //       alert('Incorrect password! Please try again');\n  //   })\n  //   .catch((err) => {\n  //     console.log(err);\n  //   });\n  // };\n\n  return (\n    // <LoginContext.Provider value={value}/>\n    // <LoginContext/>\n    // ,\n    // {loggedIn, setLoggedIn}\n    loggedIn\n    // setLoggedIn\n    // <App value={value}/>\n    // setLoggedIn(bool)\n  );\n}\n\n// export default LoginHook;\n_s(LoginHook, \"v2xeJgAPq8gALCTTBw4cbqMQSfQ=\");\n_c = LoginHook;\nexport { LoginContext, LoginHook };\n\n// export const correct = () => {useContext(LoginContext)}\nvar _c;\n$RefreshReg$(_c, \"LoginHook\");","map":{"version":3,"names":["axios","useState","createContext","useRef","useNavigate","LoginContext","loggedIn","setLoggedIn","LoginHook","bool","_s","value","_c","$RefreshReg$"],"sources":["/home/udimkpa/Documents/final-project-app-dev/client/src/hooks/LoginHook.js"],"sourcesContent":["import axios from 'axios';\nimport { useState, createContext, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst LoginContext = createContext({\n  loggedIn: false,\n  setLoggedIn: () => {}\n});\n\n\nfunction LoginHook(bool) {\n  // console.log('LoginHook!');\n  let [loggedIn, setLoggedIn] = useState();\n  const value = { loggedIn, setLoggedIn };\n\n  setLoggedIn(bool);\n\n  // const switchLoginState = () => {\n  //   setLoggedIn(bool);\n  // }\n\n\n  // Navigate\n  // const navigate = useNavigate();\n\n\n  // Login\n  // const login = () => {\n  //   console.log('Login!');\n\n  //   setLoggedIn(true);\n    \n  //   axios.post('http://localhost:3010/login', data)\n  //   .then((data) => {\n  //     console.log(data);\n  //     // window.location.href = '/'\n  //     (data.data && data.data !== 'BAD_USERNAME') ? navigate('/') :\n  //       (data.data === 'BAD_USERNAME') ? alert('This user does not exist! Pleas try again with a different username') :\n  //       alert('Incorrect password! Please try again');\n  //   })\n  //   .catch((err) => {\n  //     console.log(err);\n  //   });\n  // };\n\n\n  return (\n    // <LoginContext.Provider value={value}/>\n    // <LoginContext/>\n    // ,\n    // {loggedIn, setLoggedIn}\n    loggedIn\n    // setLoggedIn\n    // <App value={value}/>\n    // setLoggedIn(bool)\n  );\n}\n\n\n// export default LoginHook;\n\nexport { LoginContext, LoginHook }\n\n// export const correct = () => {useContext(LoginContext)}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,aAAa,EAAEC,MAAM,QAAQ,OAAO;AACvD,SAASC,WAAW,QAAQ,kBAAkB;AAG9C,MAAMC,YAAY,gBAAGH,aAAa,CAAC;EACjCI,QAAQ,EAAE,KAAK;EACfC,WAAW,EAAEA,CAAA,KAAM,CAAC;AACtB,CAAC,CAAC;AAGF,SAASC,SAASA,CAACC,IAAI,EAAE;EAAAC,EAAA;EACvB;EACA,IAAI,CAACJ,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,CAAC;EACxC,MAAMU,KAAK,GAAG;IAAEL,QAAQ;IAAEC;EAAY,CAAC;EAEvCA,WAAW,CAACE,IAAI,CAAC;;EAEjB;EACA;EACA;;EAGA;EACA;;EAGA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;IACE;IACA;IACA;IACA;IACAH;IACA;IACA;IACA;EAAA;AAEJ;;AAGA;AAAAI,EAAA,CAjDSF,SAAS;AAAAI,EAAA,GAATJ,SAAS;AAmDlB,SAASH,YAAY,EAAEG,SAAS;;AAEhC;AAAA,IAAAI,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}