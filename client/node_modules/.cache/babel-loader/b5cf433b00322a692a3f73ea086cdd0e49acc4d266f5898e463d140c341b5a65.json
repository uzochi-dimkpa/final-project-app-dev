{"ast":null,"code":"var _jsxFileName = \"/home/udimkpa/Documents/final-project-app-dev/client/src/components/IdleTimer/IdleTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useRef } from \"react\";\n// import App from \"../../App\";\nimport { SessionContext } from \"../../contexts/SessionContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction IdleTimer() {\n  _s();\n  // console.log('IdleTimer!');\n\n  const {\n    loggedIn,\n    setLoggedIn,\n    setUsername\n  } = useContext(SessionContext);\n  const timeRef = useRef(null);\n  const token = window.localStorage.getItem(\"token\");\n  const expiresIn = window.localStorage.getItem(\"expiresIn\");\n  const currentPathName = window.location.pathname;\n  let popupTimeout, logoutTimeout;\n\n  // Pages to not run the idle timer on\n  const whitelist = ['/', '/about', '/contact'];\n\n  // Restart timer\n  const restartAutoReset = () => {\n    loggedIn && token && popupTimeout && clearTimeout(popupTimeout);\n    loggedIn && token && logoutTimeout && clearTimeout(logoutTimeout);\n    if (loggedIn && token) {\n      popupTimeout = setTimeout(() => {\n        document.getElementById('token-popup').style.display = 'block';\n      }, expiresIn);\n      logoutTimeout = setTimeout(() => {\n        logout();\n      }, Number(expiresIn) + 3000);\n    }\n  };\n\n  // On mouse move\n  const onMouseMove = () => {\n    // console.log('Mouse has moved!');\n    restartAutoReset();\n  };\n\n  // Hide Popup\n  const hidePopup = () => {\n    document.getElementById('token-popup').style.display = 'none';\n    clearTimeout(popupTimeout);\n    clearTimeout(logoutTimeout);\n    window.removeEventListener('mousemove', onMouseMove);\n    // window.location.reload();\n  };\n\n  // Logout\n  const logout = () => {\n    console.log('Logout!');\n    window.localStorage.setItem('loggedIn', false);\n    window.localStorage.setItem('username', '');\n    window.localStorage.removeItem(\"token\");\n    window.localStorage.removeItem(\"expiresIn\");\n    setLoggedIn(false);\n    setUsername('');\n    hidePopup();\n    clearTimeout(popupTimeout);\n    clearTimeout(logoutTimeout);\n    window.removeEventListener('mousemove', onMouseMove);\n  };\n\n  // Extra useEffect\n  // useEffect(() => {\n  //   // ...\n  // }, [currentPathName]);\n\n  // Call function every time page changes\n  useEffect(() => {\n    // let preventReset = false;\n\n    // Prevent whitelist pages from executing\n    // for (const pathName of whitelist) {\n    //   if (pathName === currentPathName) {\n    //     preventReset = true;\n    //   }\n    // }\n\n    // if (preventReset) {\n    //   return;\n    // }\n\n    // Initiate timeout\n    restartAutoReset();\n\n    // Listen for mouse movement\n    window.addEventListener('mousemove', onMouseMove);\n\n    // Cleanup\n    return () => {\n      if (popupTimeout) {\n        clearTimeout(popupTimeout);\n        window.removeEventListener('mousemove', onMouseMove);\n      }\n      if (logoutTimeout) {\n        clearTimeout(logoutTimeout);\n        window.removeEventListener('mousemove', onMouseMove);\n      }\n    };\n  }, [currentPathName]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: timeRef,\n      id: \"token-popup\",\n      className: \"center token-popup\",\n      style: {\n        \"display\": \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"WARNING!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your session is about to expire. Would you like to refresh your session?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: hidePopup,\n        className: \"token-button button\",\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        className: \"token-button button\",\n        style: {\n          \"marginLeft\": \"40px\"\n        },\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(IdleTimer, \"glFz29vdcyl/F2MRzCMcpj8YE1Q=\");\n_c = IdleTimer;\nexport default IdleTimer;\nvar _c;\n$RefreshReg$(_c, \"IdleTimer\");","map":{"version":3,"names":["React","useContext","useEffect","useRef","SessionContext","jsxDEV","_jsxDEV","Fragment","_Fragment","IdleTimer","_s","loggedIn","setLoggedIn","setUsername","timeRef","token","window","localStorage","getItem","expiresIn","currentPathName","location","pathname","popupTimeout","logoutTimeout","whitelist","restartAutoReset","clearTimeout","setTimeout","document","getElementById","style","display","logout","Number","onMouseMove","hidePopup","removeEventListener","console","log","setItem","removeItem","addEventListener","children","ref","id","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/udimkpa/Documents/final-project-app-dev/client/src/components/IdleTimer/IdleTimer.js"],"sourcesContent":["import React, { useContext, useEffect, useRef } from \"react\";\n// import App from \"../../App\";\nimport { SessionContext } from \"../../contexts/SessionContext\";\n\nfunction IdleTimer() {\n  // console.log('IdleTimer!');\n  \n  const { loggedIn, setLoggedIn, setUsername } = useContext(SessionContext);\n  const timeRef = useRef(null);\n\n\tconst token = window.localStorage.getItem(\"token\");\n  const expiresIn = window.localStorage.getItem(\"expiresIn\");\n  \n  const currentPathName = window.location.pathname;\n\n  let popupTimeout, logoutTimeout;\n\n  // Pages to not run the idle timer on\n  const whitelist = [\n    '/',\n    '/about',\n    '/contact'\n  ]\n\n  // Restart timer\n  const restartAutoReset = () => {\n    (loggedIn && token && popupTimeout) &&\n    clearTimeout(popupTimeout);\n\n    (loggedIn && token && logoutTimeout) &&\n    clearTimeout(logoutTimeout);\n\n    if (loggedIn && token) {\n      popupTimeout = setTimeout(() => {\n        document.getElementById('token-popup').style.display = 'block';\n      }, expiresIn);\n\n      logoutTimeout = setTimeout(() => {\n        logout();\n      }, Number(expiresIn) + 3000);\n    }\n  }\n\n  // On mouse move\n  const onMouseMove = () => {\n    // console.log('Mouse has moved!');\n    restartAutoReset();\n  }\n\n  // Hide Popup\n\tconst hidePopup = () => {\n\t\tdocument.getElementById('token-popup').style.display = 'none';\n    clearTimeout(popupTimeout);\n    clearTimeout(logoutTimeout);\n    window.removeEventListener('mousemove', onMouseMove);\n    // window.location.reload();\n\t}\n\n  // Logout\n  const logout = () => {\n    console.log('Logout!');\n    window.localStorage.setItem('loggedIn', false);\n    window.localStorage.setItem('username', '');\n    window.localStorage.removeItem(\"token\");\n    window.localStorage.removeItem(\"expiresIn\");\n    setLoggedIn(false);\n    setUsername('');\n    hidePopup();\n    clearTimeout(popupTimeout);\n    clearTimeout(logoutTimeout);\n    window.removeEventListener('mousemove', onMouseMove);\n  }\n\n  // Extra useEffect\n  // useEffect(() => {\n  //   // ...\n  // }, [currentPathName]);\n\n  // Call function every time page changes\n  useEffect(() => {\n    // let preventReset = false;\n\n    // Prevent whitelist pages from executing\n    // for (const pathName of whitelist) {\n    //   if (pathName === currentPathName) {\n    //     preventReset = true;\n    //   }\n    // }\n\n    // if (preventReset) {\n    //   return;\n    // }\n\n    // Initiate timeout\n    restartAutoReset();\n\n    // Listen for mouse movement\n    window.addEventListener('mousemove', onMouseMove);\n\n    // Cleanup\n    return () => {\n      if (popupTimeout) {\n        clearTimeout(popupTimeout);\n        window.removeEventListener('mousemove', onMouseMove);\n      }\n\n      if (logoutTimeout) {\n        clearTimeout(logoutTimeout);\n        window.removeEventListener('mousemove', onMouseMove);\n      }\n    };\n  }, [currentPathName]);\n  \n  return (\n    <>\n      <div ref={timeRef} id='token-popup' className='center token-popup' style={{\"display\": \"none\"}}>\n        <h1>WARNING!</h1>\n        <h2>Your session is about to expire. Would you like to refresh your session?</h2>\n        <button onClick={hidePopup} className='token-button button'>Yes</button>\n        <button onClick={logout} className='token-button button' style={{\"marginLeft\": \"40px\"}}>No</button>\n      </div>\n    </>\n  )\n}\n\n\nexport default IdleTimer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC5D;AACA,SAASC,cAAc,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/D,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB;;EAEA,MAAM;IAAEC,QAAQ;IAAEC,WAAW;IAAEC;EAAY,CAAC,GAAGZ,UAAU,CAACG,cAAc,CAAC;EACzE,MAAMU,OAAO,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMY,KAAK,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACjD,MAAMC,SAAS,GAAGH,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAE1D,MAAME,eAAe,GAAGJ,MAAM,CAACK,QAAQ,CAACC,QAAQ;EAEhD,IAAIC,YAAY,EAAEC,aAAa;;EAE/B;EACA,MAAMC,SAAS,GAAG,CAChB,GAAG,EACH,QAAQ,EACR,UAAU,CACX;;EAED;EACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC5Bf,QAAQ,IAAII,KAAK,IAAIQ,YAAY,IAClCI,YAAY,CAACJ,YAAY,CAAC;IAEzBZ,QAAQ,IAAII,KAAK,IAAIS,aAAa,IACnCG,YAAY,CAACH,aAAa,CAAC;IAE3B,IAAIb,QAAQ,IAAII,KAAK,EAAE;MACrBQ,YAAY,GAAGK,UAAU,CAAC,MAAM;QAC9BC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,OAAO;MAChE,CAAC,EAAEb,SAAS,CAAC;MAEbK,aAAa,GAAGI,UAAU,CAAC,MAAM;QAC/BK,MAAM,CAAC,CAAC;MACV,CAAC,EAAEC,MAAM,CAACf,SAAS,CAAC,GAAG,IAAI,CAAC;IAC9B;EACF,CAAC;;EAED;EACA,MAAMgB,WAAW,GAAGA,CAAA,KAAM;IACxB;IACAT,gBAAgB,CAAC,CAAC;EACpB,CAAC;;EAED;EACD,MAAMU,SAAS,GAAGA,CAAA,KAAM;IACvBP,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;IAC3DL,YAAY,CAACJ,YAAY,CAAC;IAC1BI,YAAY,CAACH,aAAa,CAAC;IAC3BR,MAAM,CAACqB,mBAAmB,CAAC,WAAW,EAAEF,WAAW,CAAC;IACpD;EACH,CAAC;;EAEA;EACA,MAAMF,MAAM,GAAGA,CAAA,KAAM;IACnBK,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtBvB,MAAM,CAACC,YAAY,CAACuB,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC;IAC9CxB,MAAM,CAACC,YAAY,CAACuB,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;IAC3CxB,MAAM,CAACC,YAAY,CAACwB,UAAU,CAAC,OAAO,CAAC;IACvCzB,MAAM,CAACC,YAAY,CAACwB,UAAU,CAAC,WAAW,CAAC;IAC3C7B,WAAW,CAAC,KAAK,CAAC;IAClBC,WAAW,CAAC,EAAE,CAAC;IACfuB,SAAS,CAAC,CAAC;IACXT,YAAY,CAACJ,YAAY,CAAC;IAC1BI,YAAY,CAACH,aAAa,CAAC;IAC3BR,MAAM,CAACqB,mBAAmB,CAAC,WAAW,EAAEF,WAAW,CAAC;EACtD,CAAC;;EAED;EACA;EACA;EACA;;EAEA;EACAjC,SAAS,CAAC,MAAM;IACd;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACAwB,gBAAgB,CAAC,CAAC;;IAElB;IACAV,MAAM,CAAC0B,gBAAgB,CAAC,WAAW,EAAEP,WAAW,CAAC;;IAEjD;IACA,OAAO,MAAM;MACX,IAAIZ,YAAY,EAAE;QAChBI,YAAY,CAACJ,YAAY,CAAC;QAC1BP,MAAM,CAACqB,mBAAmB,CAAC,WAAW,EAAEF,WAAW,CAAC;MACtD;MAEA,IAAIX,aAAa,EAAE;QACjBG,YAAY,CAACH,aAAa,CAAC;QAC3BR,MAAM,CAACqB,mBAAmB,CAAC,WAAW,EAAEF,WAAW,CAAC;MACtD;IACF,CAAC;EACH,CAAC,EAAE,CAACf,eAAe,CAAC,CAAC;EAErB,oBACEd,OAAA,CAAAE,SAAA;IAAAmC,QAAA,eACErC,OAAA;MAAKsC,GAAG,EAAE9B,OAAQ;MAAC+B,EAAE,EAAC,aAAa;MAACC,SAAS,EAAC,oBAAoB;MAACf,KAAK,EAAE;QAAC,SAAS,EAAE;MAAM,CAAE;MAAAY,QAAA,gBAC5FrC,OAAA;QAAAqC,QAAA,EAAI;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjB5C,OAAA;QAAAqC,QAAA,EAAI;MAAwE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjF5C,OAAA;QAAQ6C,OAAO,EAAEf,SAAU;QAACU,SAAS,EAAC,qBAAqB;QAAAH,QAAA,EAAC;MAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxE5C,OAAA;QAAQ6C,OAAO,EAAElB,MAAO;QAACa,SAAS,EAAC,qBAAqB;QAACf,KAAK,EAAE;UAAC,YAAY,EAAE;QAAM,CAAE;QAAAY,QAAA,EAAC;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChG;EAAC,gBACN,CAAC;AAEP;AAACxC,EAAA,CAvHQD,SAAS;AAAA2C,EAAA,GAAT3C,SAAS;AA0HlB,eAAeA,SAAS;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}