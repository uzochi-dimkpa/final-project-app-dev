{"ast":null,"code":"var _jsxFileName = \"/home/udimkpa/Documents/final-project-app-dev/client/src/charts/DoughnutChart.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Chart as ChartJS, ArcElement } from 'chart.js';\nimport { SessionContext } from '../contexts/SessionContext';\nimport { BudgetDisplayContext } from '../contexts/BudgetDisplayContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement);\nlet myDoughnutChart;\nfunction DoughnutChart() {\n  _s();\n  const {\n    loggedIn,\n    username\n  } = useContext(SessionContext);\n  // const { hasBudget, setHasBudget } = useContext(BudgetDisplayContext);\n  const [hasBudget, setHasBudget] = useState(false);\n  function createChart(data_source) {\n    if (hasBudget) {\n      var ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n      if (myDoughnutChart) {\n        myDoughnutChart.destroy();\n      }\n      myDoughnutChart = new ChartJS(ctx, {\n        type: 'doughnut',\n        data: data_source\n      });\n    }\n  }\n  ;\n  function getBudget() {\n    console.log('Display budget!');\n    const db_name = loggedIn ? 'personal-budget' : 'guest-budget';\n    axios.post('http://localhost:3010/display', {\n      db_name: db_name,\n      username: username\n    }).then(data => {\n      if (data.data !== '') {\n        createChart(data.data[0]);\n        // setHasBudget(true);\n      } else {\n        // setHasBudget(false);\n      }\n    });\n  }\n  ;\n  getBudget();\n  // useEffect(() => {\n  //   getBudget();\n  // }, []);\n\n  // if (loggedIn) {\n  getBudget();\n  if (hasBudget) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"myChart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 16\n      }, this), \"Don't have any budget information displayed here?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Take a minute to enter in some data!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this);\n  }\n  // }\n}\n_s(DoughnutChart, \"LmMH8h/7D7qGih0KPr+N4F5s3uU=\");\n_c = DoughnutChart;\nexport default DoughnutChart;\nvar _c;\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"names":["axios","React","useState","useContext","useEffect","Chart","ChartJS","ArcElement","SessionContext","BudgetDisplayContext","jsxDEV","_jsxDEV","register","myDoughnutChart","DoughnutChart","_s","loggedIn","username","hasBudget","setHasBudget","createChart","data_source","ctx","document","getElementById","getContext","destroy","type","data","getBudget","console","log","db_name","post","then","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/udimkpa/Documents/final-project-app-dev/client/src/charts/DoughnutChart.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Chart as ChartJS, ArcElement } from 'chart.js';\nimport { SessionContext } from '../contexts/SessionContext';\nimport { BudgetDisplayContext } from '../contexts/BudgetDisplayContext';\n\nChartJS.register(ArcElement);\n\nlet myDoughnutChart;\n\nfunction DoughnutChart() {\n  const { loggedIn, username } = useContext(SessionContext);\n  // const { hasBudget, setHasBudget } = useContext(BudgetDisplayContext);\n  const [ hasBudget, setHasBudget ] = useState(false);\n  \n  function createChart(data_source) {\n    if (hasBudget) {\n      var ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n        if (myDoughnutChart) {\n          myDoughnutChart.destroy();\n        }\n        \n        myDoughnutChart = new ChartJS(ctx, {\n        type: 'doughnut',\n        data: data_source,\n      });\n    }\n  };\n\n  function getBudget() {\n  \tconsole.log('Display budget!');\n  \n  \tconst db_name = (loggedIn) ? 'personal-budget' : 'guest-budget';\n\n    axios.post('http://localhost:3010/display',\n      {\n        db_name: db_name,\n        username: username\n      }\n    )\n    .then((data) => {\n      if (data.data !== '') {\n        createChart(data.data[0]);\n        // setHasBudget(true);\n      } else {\n        // setHasBudget(false);\n      }\n    });\n  };\n  \n  getBudget();\n  // useEffect(() => {\n  //   getBudget();\n  // }, []);\n\n  // if (loggedIn) {\n    getBudget();\n    if (hasBudget) {\n      return (\n        <div className=\"chart-container\">\n            <canvas id=\"myChart\"/>\n        </div>\n      )\n    } else {\n      return (\n        <p>\n          <br/><br/>\n          Don't have any budget information displayed here?\n          <br/><br/>\n          <strong>Take a minute to enter in some data!</strong> \n        </p>\n      );\n    }\n  // }\n}\n\nexport default DoughnutChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}