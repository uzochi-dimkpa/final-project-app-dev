{"ast":null,"code":"var _jsxFileName = \"/home/udimkpa/Documents/final-project-app-dev/client/src/charts/D3Chart.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport * as d3 from 'd3';\nimport { layout } from 'react-d3-library';\nimport React, { useContext } from 'react';\nimport { SessionContext } from '../contexts/SessionContext';\n// import { BudgetDisplayContext } from '../contexts/BudgetDisplayContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction D3Chart() {\n  _s();\n  const {\n    username,\n    database\n  } = useContext(SessionContext);\n\n  /**/\n  function getData() {\n    axios.post('http://localhost:3010/display', {\n      db_name: database,\n      username: username\n    })\n    // .then(function (res) {\n    //     console.log(res.data[1]);\n    //     console.log(res.data[2]);\n    //     console.log(res.data[3]);\n\n    //     var svg = d3.select(\"body\")\n    //     .append(\"svg\")\n    //     .append(\"g\")\n\n    //     svg.append(\"g\")\n    //         .attr(\"class\", \"slices\");\n    //     svg.append(\"g\")\n    //         .attr(\"class\", \"labels\");\n    //     svg.append(\"g\")\n    //         .attr(\"class\", \"lines\");\n\n    //     var width = 960,\n    //         height = 450,\n    //         radius = Math.min(width, height) / 2;\n\n    //     var pie = d3.layout.pie()\n    //         .sort(null)\n    //         .value(function(d) {\n    //             return d.value;\n    //         });\n\n    //     var arc = d3.svg.arc()\n    //         .outerRadius(radius * 0.8)\n    //         .innerRadius(radius * 0.4);\n\n    //     var outerArc = d3.svg.arc()\n    //         .innerRadius(radius * 0.9)\n    //         .outerRadius(radius * 0.9);\n\n    //     svg.attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n    //     var key = function(d){ return d.data.label; };\n\n    //     var color = d3.scale.ordinal()\n    //     .domain(res.data[1])\n    //     .range(res.data[2]);\n\n    //     console.log(color);\n\n    //     function startData (){\n    //         var labels = color.domain();\n    //         return labels.map((label, index) => {\n    //             return { label: label, value: res.data[3][index] } // --- JSON.parse(sessionStorage.getItem('amount'))[index]\n    //         });\n    //     }\n    //     change(startData());\n\n    //     function randomData (){\n    //         var labels = color.domain();\n    //         return labels.map(function(label){\n    //             return { label: label, value: Math.random() }\n    //         });\n    //     }\n    //     // --- change(randomData());\n\n    //     d3.select(\".randomize\")\n    //         .on(\"click\", function(){\n    //             // -- getColor();\n    //             change(randomData());\n    //         });\n\n    //     d3.select(\".reset\")\n    //         .on(\"click\", function(){\n    //             // -- getColor();\n    //             change(startData());\n    //         });\n\n    //     function change(data) {\n\n    //         // ------- PIE SLICES -------\n    //         var slice = svg.select(\".slices\").selectAll(\"path.slice\")\n    //             .data(pie(data), key);\n\n    //         slice.enter()\n    //             .insert(\"path\")\n    //             .style(\"fill\", function(d) { return color(d.data.label); })\n    //             .attr(\"class\", \"slice\");\n\n    //         slice\t\t\n    //             .transition().duration(1000)\n    //             .attrTween(\"d\", function(d) {\n    //                 this._current = this._current || d;\n    //                 var interpolate = d3.interpolate(this._current, d);\n    //                 this._current = interpolate(0);\n    //                 return function(t) {\n    //                     return arc(interpolate(t));\n    //                 };\n    //             })\n\n    //         slice.exit()\n    //             .remove();\n\n    //         // ------- TEXT LABELS -------\n\n    //         var text = svg.select(\".labels\").selectAll(\"text\")\n    //             .data(pie(data), key);\n\n    //         text.enter()\n    //             .append(\"text\")\n    //             .attr(\"dy\", \".35em\")\n    //             .text(function(d) {\n    //                 return d.data.label;\n    //             });\n\n    //         function midAngle(d){\n    //             return d.startAngle + (d.endAngle - d.startAngle)/2;\n    //         }\n\n    //         text.transition().duration(1000)\n    //             .attrTween(\"transform\", function(d) {\n    //                 this._current = this._current || d;\n    //                 var interpolate = d3.interpolate(this._current, d);\n    //                 this._current = interpolate(0);\n    //                 return function(t) {\n    //                     var d2 = interpolate(t);\n    //                     var pos = outerArc.centroid(d2);\n    //                     pos[0] = radius * (midAngle(d2) < Math.PI ? 1 : -1);\n    //                     return \"translate(\"+ pos +\")\";\n    //                 };\n    //             })\n    //             .styleTween(\"text-anchor\", function(d){\n    //                 this._current = this._current || d;\n    //                 var interpolate = d3.interpolate(this._current, d);\n    //                 this._current = interpolate(0);\n    //                 return function(t) {\n    //                     var d2 = interpolate(t);\n    //                     return midAngle(d2) < Math.PI ? \"start\":\"end\";\n    //                 };\n    //             });\n\n    //         text.exit()\n    //             .remove();\n\n    //         // ------- SLICE TO TEXT POLYLINES -------\n\n    //         var polyline = svg.select(\".lines\").selectAll(\"polyline\")\n    //             .data(pie(data), key);\n\n    //         polyline.enter()\n    //             .append(\"polyline\");\n\n    //         polyline.transition().duration(1000)\n    //             .attrTween(\"points\", function(d){\n    //                 this._current = this._current || d;\n    //                 var interpolate = d3.interpolate(this._current, d);\n    //                 this._current = interpolate(0);\n    //                 return function(t) {\n    //                     var d2 = interpolate(t);\n    //                     var pos = outerArc.centroid(d2);\n    //                     pos[0] = radius * 0.95 * (midAngle(d2) < Math.PI ? 1 : -1);\n    //                     return [arc.centroid(d2), outerArc.centroid(d2), pos];\n    //                 };\t\t\t\n    //             });\n\n    //         polyline.exit()\n    //             .remove();\n    //     };\n    // })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n  ;\n  /**/\n  // getData();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"d3-pie-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n_s(D3Chart, \"xTTu56c6xb9wm7PC41jrla6B1hk=\");\n_c = D3Chart;\nexport default D3Chart;\nvar _c;\n$RefreshReg$(_c, \"D3Chart\");","map":{"version":3,"names":["axios","d3","layout","React","useContext","SessionContext","jsxDEV","_jsxDEV","D3Chart","_s","username","database","getData","post","db_name","catch","err","console","log","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/udimkpa/Documents/final-project-app-dev/client/src/charts/D3Chart.js"],"sourcesContent":["import axios from 'axios';\nimport * as d3 from 'd3';\nimport { layout } from 'react-d3-library';\nimport React, { useContext } from 'react';\nimport { SessionContext } from '../contexts/SessionContext';\n// import { BudgetDisplayContext } from '../contexts/BudgetDisplayContext';\n\nfunction D3Chart() {\n  const { username, database } = useContext(SessionContext);\n  \n  /**/\n  function getData() {\n    axios.post('http://localhost:3010/display',\n      {\n        db_name: database,\n        username: username\n      }\n    )\n    // .then(function (res) {\n    //     console.log(res.data[1]);\n    //     console.log(res.data[2]);\n    //     console.log(res.data[3]);\n\n    //     var svg = d3.select(\"body\")\n    //     .append(\"svg\")\n    //     .append(\"g\")\n\n    //     svg.append(\"g\")\n    //         .attr(\"class\", \"slices\");\n    //     svg.append(\"g\")\n    //         .attr(\"class\", \"labels\");\n    //     svg.append(\"g\")\n    //         .attr(\"class\", \"lines\");\n    \n    //     var width = 960,\n    //         height = 450,\n    //         radius = Math.min(width, height) / 2;\n    \n    //     var pie = d3.layout.pie()\n    //         .sort(null)\n    //         .value(function(d) {\n    //             return d.value;\n    //         });\n    \n    //     var arc = d3.svg.arc()\n    //         .outerRadius(radius * 0.8)\n    //         .innerRadius(radius * 0.4);\n    \n    //     var outerArc = d3.svg.arc()\n    //         .innerRadius(radius * 0.9)\n    //         .outerRadius(radius * 0.9);\n    \n    //     svg.attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n    \n    //     var key = function(d){ return d.data.label; };\n        \n    //     var color = d3.scale.ordinal()\n    //     .domain(res.data[1])\n    //     .range(res.data[2]);\n    \n    //     console.log(color);\n        \n    //     function startData (){\n    //         var labels = color.domain();\n    //         return labels.map((label, index) => {\n    //             return { label: label, value: res.data[3][index] } // --- JSON.parse(sessionStorage.getItem('amount'))[index]\n    //         });\n    //     }\n    //     change(startData());\n    \n    //     function randomData (){\n    //         var labels = color.domain();\n    //         return labels.map(function(label){\n    //             return { label: label, value: Math.random() }\n    //         });\n    //     }\n    //     // --- change(randomData());\n    \n    //     d3.select(\".randomize\")\n    //         .on(\"click\", function(){\n    //             // -- getColor();\n    //             change(randomData());\n    //         });\n        \n    //     d3.select(\".reset\")\n    //         .on(\"click\", function(){\n    //             // -- getColor();\n    //             change(startData());\n    //         });\n\n    //     function change(data) {\n\n    //         // ------- PIE SLICES -------\n    //         var slice = svg.select(\".slices\").selectAll(\"path.slice\")\n    //             .data(pie(data), key);\n    \n    //         slice.enter()\n    //             .insert(\"path\")\n    //             .style(\"fill\", function(d) { return color(d.data.label); })\n    //             .attr(\"class\", \"slice\");\n    \n    //         slice\t\t\n    //             .transition().duration(1000)\n    //             .attrTween(\"d\", function(d) {\n    //                 this._current = this._current || d;\n    //                 var interpolate = d3.interpolate(this._current, d);\n    //                 this._current = interpolate(0);\n    //                 return function(t) {\n    //                     return arc(interpolate(t));\n    //                 };\n    //             })\n    \n    //         slice.exit()\n    //             .remove();\n    \n    //         // ------- TEXT LABELS -------\n    \n    //         var text = svg.select(\".labels\").selectAll(\"text\")\n    //             .data(pie(data), key);\n    \n    //         text.enter()\n    //             .append(\"text\")\n    //             .attr(\"dy\", \".35em\")\n    //             .text(function(d) {\n    //                 return d.data.label;\n    //             });\n            \n    //         function midAngle(d){\n    //             return d.startAngle + (d.endAngle - d.startAngle)/2;\n    //         }\n    \n    //         text.transition().duration(1000)\n    //             .attrTween(\"transform\", function(d) {\n    //                 this._current = this._current || d;\n    //                 var interpolate = d3.interpolate(this._current, d);\n    //                 this._current = interpolate(0);\n    //                 return function(t) {\n    //                     var d2 = interpolate(t);\n    //                     var pos = outerArc.centroid(d2);\n    //                     pos[0] = radius * (midAngle(d2) < Math.PI ? 1 : -1);\n    //                     return \"translate(\"+ pos +\")\";\n    //                 };\n    //             })\n    //             .styleTween(\"text-anchor\", function(d){\n    //                 this._current = this._current || d;\n    //                 var interpolate = d3.interpolate(this._current, d);\n    //                 this._current = interpolate(0);\n    //                 return function(t) {\n    //                     var d2 = interpolate(t);\n    //                     return midAngle(d2) < Math.PI ? \"start\":\"end\";\n    //                 };\n    //             });\n    \n    //         text.exit()\n    //             .remove();\n    \n    //         // ------- SLICE TO TEXT POLYLINES -------\n    \n    //         var polyline = svg.select(\".lines\").selectAll(\"polyline\")\n    //             .data(pie(data), key);\n            \n    //         polyline.enter()\n    //             .append(\"polyline\");\n    \n    //         polyline.transition().duration(1000)\n    //             .attrTween(\"points\", function(d){\n    //                 this._current = this._current || d;\n    //                 var interpolate = d3.interpolate(this._current, d);\n    //                 this._current = interpolate(0);\n    //                 return function(t) {\n    //                     var d2 = interpolate(t);\n    //                     var pos = outerArc.centroid(d2);\n    //                     pos[0] = radius * 0.95 * (midAngle(d2) < Math.PI ? 1 : -1);\n    //                     return [arc.centroid(d2), outerArc.centroid(d2), pos];\n    //                 };\t\t\t\n    //             });\n            \n    //         polyline.exit()\n    //             .remove();\n    //     };\n    // })\n    .catch((err) => {\n      console.log(err);\n    });\n  };\n  /**/\n// getData();\n\n  return (\n    <div id=\"d3-pie-container\"/>\n  );\n}\n\n\nexport default D3Chart;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,SAASC,MAAM,QAAQ,kBAAkB;AACzC,OAAOC,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,cAAc,QAAQ,4BAA4B;AAC3D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGP,UAAU,CAACC,cAAc,CAAC;;EAEzD;EACA,SAASO,OAAOA,CAAA,EAAG;IACjBZ,KAAK,CAACa,IAAI,CAAC,+BAA+B,EACxC;MACEC,OAAO,EAAEH,QAAQ;MACjBD,QAAQ,EAAEA;IACZ,CACF;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;;IAEA;;IAEA;IACA;IACA;;IAEA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;;IAEA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;;IAEA;IACA;;IAEA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IAAA,CACCK,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;EACJ;EAAC;EACD;EACF;;EAEE,oBACET,OAAA;IAAKY,EAAE,EAAC;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEhC;AAACd,EAAA,CAxLQD,OAAO;AAAAgB,EAAA,GAAPhB,OAAO;AA2LhB,eAAeA,OAAO;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}