{"ast":null,"code":"var _jsxFileName = \"/home/udimkpa/Documents/final-project-app-dev/client/src/charts/D3Chart.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport * as d3 from 'd3';\nimport React, { useContext } from 'react';\nimport { SessionContext } from '../contexts/SessionContext';\nimport { BudgetDisplayContext } from '../contexts/BudgetDisplayContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction D3Chart() {\n  _s();\n  const {\n    username\n  } = useContext(SessionContext);\n  const {\n    database\n  } = useContext(BudgetDisplayContext);\n\n  // console.log(username, database);\n\n  var svg = d3.select(\"figure#d3-donut-container\").append(\"svg\").append(\"g\");\n  svg.append(\"g\").attr(\"class\", \"slices\");\n  svg.append(\"g\").attr(\"class\", \"labels\");\n  svg.append(\"g\").attr(\"class\", \"lines\");\n  var width = 960,\n    height = 450,\n    radius = Math.min(width, height) / 2;\n  var pie = d3.pie().sort(null).value(function (d) {\n    return d.value;\n  });\n  var arc = d3.arc().outerRadius(radius * 0.8).innerRadius(radius * 0.4);\n  var outerArc = d3.arc().innerRadius(radius * 0.9).outerRadius(radius * 0.9);\n  svg.attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n  var key = function (d) {\n    return d.data.label;\n  };\n  var color = d3.scaleOrdinal();\n  function change(data) {\n    // ------- PIE SLICES -------\n    var slice = svg.select(\".slices\").selectAll(\"path.slice\").data(pie(data), key);\n    slice.enter().insert(\"path\").style(\"fill\", function (d) {\n      return color(d.data.label);\n    }).attr(\"class\", \"slice\");\n    slice.transition().duration(1000).attrTween(\"d\", function (d) {\n      this._current = this._current || d;\n      var interpolate = d3.interpolate(this._current, d);\n      this._current = interpolate(0);\n      return function (t) {\n        return arc(interpolate(t));\n      };\n    });\n    slice.exit().remove();\n\n    // ------- TEXT LABELS -------\n\n    var text = svg.select(\".labels\").selectAll(\"text\").data(pie(data), key);\n    text.enter().append(\"text\").attr(\"dy\", \".35em\").text(function (d) {\n      return d.data.label;\n    });\n    function midAngle(d) {\n      return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    }\n    text.transition().duration(1000).attrTween(\"transform\", function (d) {\n      this._current = this._current || d;\n      var interpolate = d3.interpolate(this._current, d);\n      this._current = interpolate(0);\n      return function (t) {\n        var d2 = interpolate(t);\n        var pos = outerArc.centroid(d2);\n        pos[0] = radius * (midAngle(d2) < Math.PI ? 1 : -1);\n        return \"translate(\" + pos + \")\";\n      };\n    }).styleTween(\"text-anchor\", function (d) {\n      this._current = this._current || d;\n      var interpolate = d3.interpolate(this._current, d);\n      this._current = interpolate(0);\n      return function (t) {\n        var d2 = interpolate(t);\n        return midAngle(d2) < Math.PI ? \"start\" : \"end\";\n      };\n    });\n    text.exit().remove();\n\n    // ------- SLICE TO TEXT POLYLINES -------\n\n    var polyline = svg.select(\".lines\").selectAll(\"polyline\").data(pie(data), key);\n    polyline.enter().append(\"polyline\");\n    polyline.transition().duration(1000).attrTween(\"points\", function (d) {\n      this._current = this._current || d;\n      var interpolate = d3.interpolate(this._current, d);\n      this._current = interpolate(0);\n      return function (t) {\n        var d2 = interpolate(t);\n        var pos = outerArc.centroid(d2);\n        pos[0] = radius * 0.95 * (midAngle(d2) < Math.PI ? 1 : -1);\n        return [arc.centroid(d2), outerArc.centroid(d2), pos];\n      };\n    });\n    polyline.exit().remove();\n  }\n  ;\n  function startData(res) {\n    var labels = color.domain();\n    return labels.map((label, index) => {\n      return {\n        label: label,\n        value: res.data[3][index]\n      }; // --- JSON.parse(sessionStorage.getItem('amount'))[index]\n    });\n  }\n\n  change(startData());\n  function randomData() {\n    var labels = color.domain();\n    return labels.map(function (label) {\n      return {\n        label: label,\n        value: Math.random()\n      };\n    });\n  }\n  d3.select(\".randomize\").on(\"click\", function () {\n    // -- getColor();\n    change(randomData());\n  });\n  d3.select(\".reset\").on(\"click\", function () {\n    // -- getColor();\n    change(startData());\n  });\n  function getData() {\n    axios.post('http://localhost:3010/display', {\n      database: database,\n      username: username\n    }).then(function (res) {\n      console.log(res.data[1]);\n      console.log(res.data[2]);\n      console.log(res.data[3]);\n\n      // generateChart();\n\n      /*\n        var svg = d3.select(\"figure#d3-donut-container\")\n        .append(\"svg\")\n        .append(\"g\")\n         svg.append(\"g\")\n            .attr(\"class\", \"slices\");\n        svg.append(\"g\")\n            .attr(\"class\", \"labels\");\n        svg.append(\"g\")\n            .attr(\"class\", \"lines\");\n             var width = 960,\n            height = 450,\n            radius = Math.min(width, height) / 2;\n             var pie = d3.pie()\n            .sort(null)\n            .value(function(d) {\n                return d.value;\n            });\n             var arc = d3.arc()\n            .outerRadius(radius * 0.8)\n            .innerRadius(radius * 0.4);\n             var outerArc = d3.arc()\n            .innerRadius(radius * 0.9)\n            .outerRadius(radius * 0.9);\n             svg.attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n             var key = function(d){ return d.data.label; };\n      /**/\n\n      color.domain(res.data[1]).range(res.data[2]);\n      change(startData(res));\n\n      // console.log(color);\n\n      // function startData() {\n      //     var labels = color.domain();\n      //     return labels.map((label, index) => {\n      //         return { label: label, value: res.data[3][index] } // --- JSON.parse(sessionStorage.getItem('amount'))[index]\n      //     });\n      // }\n      // change(startData());\n\n      // function randomData() {\n      //     var labels = color.domain();\n      //     return labels.map(function(label){\n      //         return { label: label, value: Math.random() }\n      //     });\n      // }\n      // --- change(randomData());\n\n      // d3.select(\".randomize\")\n      //     .on(\"click\", function(){\n      //         // -- getColor();\n      //         change(randomData());\n      //     });\n\n      // d3.select(\".reset\")\n      //     .on(\"click\", function(){\n      //         // -- getColor();\n      //         change(startData());\n      //     });\n\n      /*\n      function change(data) {\n           // ------- PIE SLICES -------\n          var slice = svg.select(\".slices\").selectAll(\"path.slice\")\n              .data(pie(data), key);\n               slice.enter()\n              .insert(\"path\")\n              .style(\"fill\", function(d) { return color(d.data.label); })\n              .attr(\"class\", \"slice\");\n               slice\t\t\n              .transition().duration(1000)\n              .attrTween(\"d\", function(d) {\n                  this._current = this._current || d;\n                  var interpolate = d3.interpolate(this._current, d);\n                  this._current = interpolate(0);\n                  return function(t) {\n                      return arc(interpolate(t));\n                  };\n              })\n               slice.exit()\n              .remove();\n               // ------- TEXT LABELS -------\n               var text = svg.select(\".labels\").selectAll(\"text\")\n              .data(pie(data), key);\n               text.enter()\n              .append(\"text\")\n              .attr(\"dy\", \".35em\")\n              .text(function(d) {\n                  return d.data.label;\n              });\n          \n          function midAngle(d){\n              return d.startAngle + (d.endAngle - d.startAngle)/2;\n          }\n               text.transition().duration(1000)\n              .attrTween(\"transform\", function(d) {\n                  this._current = this._current || d;\n                  var interpolate = d3.interpolate(this._current, d);\n                  this._current = interpolate(0);\n                  return function(t) {\n                      var d2 = interpolate(t);\n                      var pos = outerArc.centroid(d2);\n                      pos[0] = radius * (midAngle(d2) < Math.PI ? 1 : -1);\n                      return \"translate(\"+ pos +\")\";\n                  };\n              })\n              .styleTween(\"text-anchor\", function(d){\n                  this._current = this._current || d;\n                  var interpolate = d3.interpolate(this._current, d);\n                  this._current = interpolate(0);\n                  return function(t) {\n                      var d2 = interpolate(t);\n                      return midAngle(d2) < Math.PI ? \"start\":\"end\";\n                  };\n              });\n               text.exit()\n              .remove();\n               // ------- SLICE TO TEXT POLYLINES -------\n               var polyline = svg.select(\".lines\").selectAll(\"polyline\")\n              .data(pie(data), key);\n          \n          polyline.enter()\n              .append(\"polyline\");\n               polyline.transition().duration(1000)\n              .attrTween(\"points\", function(d){\n                  this._current = this._current || d;\n                  var interpolate = d3.interpolate(this._current, d);\n                  this._current = interpolate(0);\n                  return function(t) {\n                      var d2 = interpolate(t);\n                      var pos = outerArc.centroid(d2);\n                      pos[0] = radius * 0.95 * (midAngle(d2) < Math.PI ? 1 : -1);\n                      return [arc.centroid(d2), outerArc.centroid(d2), pos];\n                  };\t\t\t\n              });\n          \n          polyline.exit()\n              .remove();\n      };\n      /**/\n    }).catch(err => {\n      console.log(err);\n    });\n\n    // function generateChart() {\n    //   console.log(d3.pie());\n    //   console.log(d3.arc());\n    //   console.log(d3.scaleOrdinal());\n    // }\n  }\n  ;\n  getData();\n  return /*#__PURE__*/_jsxDEV(\"figure\", {\n    id: \"d3-donut-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 5\n  }, this);\n}\n_s(D3Chart, \"7U+U6AMVVd1QCB7cHEstW5rKfaM=\");\n_c = D3Chart;\nexport default D3Chart;\nvar _c;\n$RefreshReg$(_c, \"D3Chart\");","map":{"version":3,"names":["axios","d3","React","useContext","SessionContext","BudgetDisplayContext","jsxDEV","_jsxDEV","D3Chart","_s","username","database","svg","select","append","attr","width","height","radius","Math","min","pie","sort","value","d","arc","outerRadius","innerRadius","outerArc","key","data","label","color","scaleOrdinal","change","slice","selectAll","enter","insert","style","transition","duration","attrTween","_current","interpolate","t","exit","remove","text","midAngle","startAngle","endAngle","d2","pos","centroid","PI","styleTween","polyline","startData","res","labels","domain","map","index","randomData","random","on","getData","post","then","console","log","range","catch","err","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/udimkpa/Documents/final-project-app-dev/client/src/charts/D3Chart.js"],"sourcesContent":["import axios from 'axios';\nimport * as d3 from 'd3';\nimport React, { useContext } from 'react';\nimport { SessionContext } from '../contexts/SessionContext';\nimport { BudgetDisplayContext } from '../contexts/BudgetDisplayContext';\n\nfunction D3Chart() {\n  const { username } = useContext(SessionContext);\n  const { database } = useContext(BudgetDisplayContext);\n  \n  // console.log(username, database);\n\n  var svg = d3.select(\"figure#d3-donut-container\")\n              .append(\"svg\")\n              .append(\"g\")\n\n  svg.append(\"g\")\n      .attr(\"class\", \"slices\");\n  svg.append(\"g\")\n      .attr(\"class\", \"labels\");\n  svg.append(\"g\")\n      .attr(\"class\", \"lines\");\n\n  var width = 960,\n      height = 450,\n      radius = Math.min(width, height) / 2;\n\n  var pie = d3.pie()\n      .sort(null)\n      .value(function(d) {\n          return d.value;\n      });\n\n  var arc = d3.arc()\n      .outerRadius(radius * 0.8)\n      .innerRadius(radius * 0.4);\n\n  var outerArc = d3.arc()\n      .innerRadius(radius * 0.9)\n      .outerRadius(radius * 0.9);\n\n  svg.attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n  var key = function(d){ return d.data.label; };\n\n  var color = d3.scaleOrdinal();\n\n  function change(data) {\n    // ------- PIE SLICES -------\n    var slice = svg.select(\".slices\").selectAll(\"path.slice\")\n        .data(pie(data), key);\n\n    slice.enter()\n        .insert(\"path\")\n        .style(\"fill\", function(d) { return color(d.data.label); })\n        .attr(\"class\", \"slice\");\n\n    slice\t\t\n        .transition().duration(1000)\n        .attrTween(\"d\", function(d) {\n            this._current = this._current || d;\n            var interpolate = d3.interpolate(this._current, d);\n            this._current = interpolate(0);\n            return function(t) {\n                return arc(interpolate(t));\n            };\n        })\n\n    slice.exit()\n        .remove();\n\n    // ------- TEXT LABELS -------\n\n    var text = svg.select(\".labels\").selectAll(\"text\")\n        .data(pie(data), key);\n\n    text.enter()\n        .append(\"text\")\n        .attr(\"dy\", \".35em\")\n        .text(function(d) {\n            return d.data.label;\n        });\n    \n    function midAngle(d){\n        return d.startAngle + (d.endAngle - d.startAngle)/2;\n    }\n\n    text.transition().duration(1000)\n        .attrTween(\"transform\", function(d) {\n            this._current = this._current || d;\n            var interpolate = d3.interpolate(this._current, d);\n            this._current = interpolate(0);\n            return function(t) {\n                var d2 = interpolate(t);\n                var pos = outerArc.centroid(d2);\n                pos[0] = radius * (midAngle(d2) < Math.PI ? 1 : -1);\n                return \"translate(\"+ pos +\")\";\n            };\n        })\n        .styleTween(\"text-anchor\", function(d){\n            this._current = this._current || d;\n            var interpolate = d3.interpolate(this._current, d);\n            this._current = interpolate(0);\n            return function(t) {\n                var d2 = interpolate(t);\n                return midAngle(d2) < Math.PI ? \"start\":\"end\";\n            };\n        });\n\n    text.exit()\n        .remove();\n\n    // ------- SLICE TO TEXT POLYLINES -------\n\n    var polyline = svg.select(\".lines\").selectAll(\"polyline\")\n        .data(pie(data), key);\n    \n    polyline.enter()\n        .append(\"polyline\");\n\n    polyline.transition().duration(1000)\n        .attrTween(\"points\", function(d){\n            this._current = this._current || d;\n            var interpolate = d3.interpolate(this._current, d);\n            this._current = interpolate(0);\n            return function(t) {\n                var d2 = interpolate(t);\n                var pos = outerArc.centroid(d2);\n                pos[0] = radius * 0.95 * (midAngle(d2) < Math.PI ? 1 : -1);\n                return [arc.centroid(d2), outerArc.centroid(d2), pos];\n            };\t\t\t\n        });\n    \n    polyline.exit()\n        .remove();\n  };\n\n  function startData(res) {\n    var labels = color.domain();\n    return labels.map((label, index) => {\n        return { label: label, value: res.data[3][index] } // --- JSON.parse(sessionStorage.getItem('amount'))[index]\n    });\n  }\n  change(startData());\n\n  function randomData() {\n      var labels = color.domain();\n      return labels.map(function(label){\n          return { label: label, value: Math.random() }\n      });\n  }\n\n  d3.select(\".randomize\")\n    .on(\"click\", function(){\n        // -- getColor();\n        change(randomData());\n    });\n        \n  d3.select(\".reset\")\n    .on(\"click\", function(){\n        // -- getColor();\n        change(startData());\n    });\n\n  function getData() {\n    axios.post('http://localhost:3010/display',\n      {\n        database: database,\n        username: username\n      }\n    )\n    .then(function (res) {\n        console.log(res.data[1]);\n        console.log(res.data[2]);\n        console.log(res.data[3]);\n\n        // generateChart();\n\n      /*\n        var svg = d3.select(\"figure#d3-donut-container\")\n        .append(\"svg\")\n        .append(\"g\")\n\n        svg.append(\"g\")\n            .attr(\"class\", \"slices\");\n        svg.append(\"g\")\n            .attr(\"class\", \"labels\");\n        svg.append(\"g\")\n            .attr(\"class\", \"lines\");\n    \n        var width = 960,\n            height = 450,\n            radius = Math.min(width, height) / 2;\n    \n        var pie = d3.pie()\n            .sort(null)\n            .value(function(d) {\n                return d.value;\n            });\n    \n        var arc = d3.arc()\n            .outerRadius(radius * 0.8)\n            .innerRadius(radius * 0.4);\n    \n        var outerArc = d3.arc()\n            .innerRadius(radius * 0.9)\n            .outerRadius(radius * 0.9);\n    \n        svg.attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n    \n        var key = function(d){ return d.data.label; };\n      /**/\n        \n        color\n        .domain(res.data[1])\n        .range(res.data[2]);\n\n        change(startData(res));\n    \n        // console.log(color);\n        \n        // function startData() {\n        //     var labels = color.domain();\n        //     return labels.map((label, index) => {\n        //         return { label: label, value: res.data[3][index] } // --- JSON.parse(sessionStorage.getItem('amount'))[index]\n        //     });\n        // }\n        // change(startData());\n    \n        // function randomData() {\n        //     var labels = color.domain();\n        //     return labels.map(function(label){\n        //         return { label: label, value: Math.random() }\n        //     });\n        // }\n        // --- change(randomData());\n    \n        // d3.select(\".randomize\")\n        //     .on(\"click\", function(){\n        //         // -- getColor();\n        //         change(randomData());\n        //     });\n        \n        // d3.select(\".reset\")\n        //     .on(\"click\", function(){\n        //         // -- getColor();\n        //         change(startData());\n        //     });\n\n        /*\n        function change(data) {\n\n            // ------- PIE SLICES -------\n            var slice = svg.select(\".slices\").selectAll(\"path.slice\")\n                .data(pie(data), key);\n    \n            slice.enter()\n                .insert(\"path\")\n                .style(\"fill\", function(d) { return color(d.data.label); })\n                .attr(\"class\", \"slice\");\n    \n            slice\t\t\n                .transition().duration(1000)\n                .attrTween(\"d\", function(d) {\n                    this._current = this._current || d;\n                    var interpolate = d3.interpolate(this._current, d);\n                    this._current = interpolate(0);\n                    return function(t) {\n                        return arc(interpolate(t));\n                    };\n                })\n    \n            slice.exit()\n                .remove();\n    \n            // ------- TEXT LABELS -------\n    \n            var text = svg.select(\".labels\").selectAll(\"text\")\n                .data(pie(data), key);\n    \n            text.enter()\n                .append(\"text\")\n                .attr(\"dy\", \".35em\")\n                .text(function(d) {\n                    return d.data.label;\n                });\n            \n            function midAngle(d){\n                return d.startAngle + (d.endAngle - d.startAngle)/2;\n            }\n    \n            text.transition().duration(1000)\n                .attrTween(\"transform\", function(d) {\n                    this._current = this._current || d;\n                    var interpolate = d3.interpolate(this._current, d);\n                    this._current = interpolate(0);\n                    return function(t) {\n                        var d2 = interpolate(t);\n                        var pos = outerArc.centroid(d2);\n                        pos[0] = radius * (midAngle(d2) < Math.PI ? 1 : -1);\n                        return \"translate(\"+ pos +\")\";\n                    };\n                })\n                .styleTween(\"text-anchor\", function(d){\n                    this._current = this._current || d;\n                    var interpolate = d3.interpolate(this._current, d);\n                    this._current = interpolate(0);\n                    return function(t) {\n                        var d2 = interpolate(t);\n                        return midAngle(d2) < Math.PI ? \"start\":\"end\";\n                    };\n                });\n    \n            text.exit()\n                .remove();\n    \n            // ------- SLICE TO TEXT POLYLINES -------\n    \n            var polyline = svg.select(\".lines\").selectAll(\"polyline\")\n                .data(pie(data), key);\n            \n            polyline.enter()\n                .append(\"polyline\");\n    \n            polyline.transition().duration(1000)\n                .attrTween(\"points\", function(d){\n                    this._current = this._current || d;\n                    var interpolate = d3.interpolate(this._current, d);\n                    this._current = interpolate(0);\n                    return function(t) {\n                        var d2 = interpolate(t);\n                        var pos = outerArc.centroid(d2);\n                        pos[0] = radius * 0.95 * (midAngle(d2) < Math.PI ? 1 : -1);\n                        return [arc.centroid(d2), outerArc.centroid(d2), pos];\n                    };\t\t\t\n                });\n            \n            polyline.exit()\n                .remove();\n        };\n        /**/\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n\n    // function generateChart() {\n    //   console.log(d3.pie());\n    //   console.log(d3.arc());\n    //   console.log(d3.scaleOrdinal());\n    // }\n  };\n  \n  getData();\n\n  return (\n    <figure id=\"d3-donut-container\"/>\n  );\n}\n\n\nexport default D3Chart;"],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MASQE,KAAK,CACJ6B,MAAM,CAACF,GAAG,CAAC7B,IAAI,CAAC,CAAC,CAAC,CAAC,CACnB0C,KAAK,CAACb,GAAG,CAAC7B,IAAI,CAAC,CAAC,CAAC,CAAC;MAEnBI,MAAM,CAACwB,SAAS,CAACC,GAAG,CAAC,CAAC;;MAEtB;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;;MAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAaI,CAAC,CAAC,CACDc,KAAK,CAAEC,GAAG,IAAK;MACdJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;IAClB,CAAC,CAAC;;IAEF;IACA;IACA;IACA;IACA;EACF;EAAC;EAEDP,OAAO,CAAC,CAAC;EAET,oBACE5D,OAAA;IAAQoE,EAAE,EAAC;EAAoB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAErC;AAACtE,EAAA,CAhWQD,OAAO;AAAAwE,EAAA,GAAPxE,OAAO;AAmWhB,eAAeA,OAAO;AAAC,IAAAwE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}