{"ast":null,"code":"const mongoose = require('mongoose');\nlet url = `mongodb+srv://dbUser:password123!@cluster0.83ninbj.mongodb.net/?retryWrites=true&w=majority`;\nconst connectToDBs = () => {\n  try {\n    const pbDB = mongoose.createConnection(url, {\n      dbName: 'personal-budget',\n      useUnifiedTopology: true,\n      useNewUrlParser: true,\n      maxPoolSize: 10\n    });\n    return {\n      pbDB\n    };\n  } catch (error) {\n    console.error(`Error: ${error.message}`);\n    process.exit(1);\n  }\n};\nmodule.exports = {\n  connectToDBs\n};","map":{"version":3,"names":["mongoose","require","url","connectToDBs","pbDB","createConnection","dbName","useUnifiedTopology","useNewUrlParser","maxPoolSize","error","console","message","process","exit","module","exports"],"sources":["/home/udimkpa/Documents/final-project-app-dev/src/config/dbConnections.js"],"sourcesContent":["const mongoose = require('mongoose');\n\n\nlet url = `mongodb+srv://dbUser:password123!@cluster0.83ninbj.mongodb.net/?retryWrites=true&w=majority`;\n\n\nconst connectToDBs = () => {\n\n  try {\n    const pbDB = mongoose.createConnection(url, {\n      dbName: 'personal-budget',\n      useUnifiedTopology: true,\n      useNewUrlParser: true,\n      maxPoolSize: 10\n    })\n\n    return { pbDB }\n  } catch (error) {\n    console.error(`Error: ${error.message}`)\n    process.exit(1)\n  }\n}\n\n\nmodule.exports = { connectToDBs };"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAGpC,IAAIC,GAAG,GAAI,6FAA4F;AAGvG,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAEzB,IAAI;IACF,MAAMC,IAAI,GAAGJ,QAAQ,CAACK,gBAAgB,CAACH,GAAG,EAAE;MAC1CI,MAAM,EAAE,iBAAiB;MACzBC,kBAAkB,EAAE,IAAI;MACxBC,eAAe,EAAE,IAAI;MACrBC,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,OAAO;MAAEL;IAAK,CAAC;EACjB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAE,UAASA,KAAK,CAACE,OAAQ,EAAC,CAAC;IACxCC,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;EACjB;AACF,CAAC;AAGDC,MAAM,CAACC,OAAO,GAAG;EAAEb;AAAa,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}