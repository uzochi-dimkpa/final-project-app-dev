{"ast":null,"code":"var _jsxFileName = \"/home/udimkpa/Documents/final-project-app-dev/client/src/hooks/LoginHook.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState, createContext, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginContext = /*#__PURE__*/createContext();\nfunction LoginHook(data) {\n  _s();\n  console.log('LoginHook!');\n  let [loggedIn, setLoggedIn] = useState(false);\n\n  // Navigate\n  // const navigate = useNavigate();\n\n  // Login\n  // const login = () => {\n  //   console.log('Login!');\n\n  //   setLoggedIn(true);\n\n  //   axios.post('http://localhost:3010/login', data)\n  //   .then((data) => {\n  //     console.log(data);\n  //     // window.location.href = '/'\n  //     (data.data && data.data !== 'BAD_USERNAME') ? navigate('/') :\n  //       (data.data === 'BAD_USERNAME') ? alert('This user does not exist! Pleas try again with a different username') :\n  //       alert('Incorrect password! Please try again');\n  //   })\n  //   .catch((err) => {\n  //     console.log(err);\n  //   });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n    value: {\n      loggedIn,\n      setLoggedIn\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this)\n  // <LoginContext/>\n  // ,\n  // {loggedIn, setLoggedIn}\n  // loggedIn\n  // setLoggedIn\n  ;\n}\n_s(LoginHook, \"rumETxDPcQWJcg8a6Y55ZSVDz7g=\");\n_c = LoginHook;\nexport default LoginHook;\n\n// export { LoginContext, LoginHook }\n\n// export const correct = () => {useContext(LoginContext)}\nvar _c;\n$RefreshReg$(_c, \"LoginHook\");","map":{"version":3,"names":["axios","useState","createContext","useRef","useNavigate","jsxDEV","_jsxDEV","LoginContext","LoginHook","data","_s","console","log","loggedIn","setLoggedIn","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/udimkpa/Documents/final-project-app-dev/client/src/hooks/LoginHook.js"],"sourcesContent":["import axios from 'axios';\nimport { useState, createContext, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst LoginContext = createContext();\n\nfunction LoginHook(data) {\n  console.log('LoginHook!');\n  let [loggedIn, setLoggedIn] = useState(false);\n\n\n  // Navigate\n  // const navigate = useNavigate();\n\n\n  // Login\n  // const login = () => {\n  //   console.log('Login!');\n\n  //   setLoggedIn(true);\n    \n  //   axios.post('http://localhost:3010/login', data)\n  //   .then((data) => {\n  //     console.log(data);\n  //     // window.location.href = '/'\n  //     (data.data && data.data !== 'BAD_USERNAME') ? navigate('/') :\n  //       (data.data === 'BAD_USERNAME') ? alert('This user does not exist! Pleas try again with a different username') :\n  //       alert('Incorrect password! Please try again');\n  //   })\n  //   .catch((err) => {\n  //     console.log(err);\n  //   });\n  // };\n\n\n  return (\n    <LoginContext.Provider value={{loggedIn, setLoggedIn}}/>\n    // <LoginContext/>\n    // ,\n    // {loggedIn, setLoggedIn}\n    // loggedIn\n    // setLoggedIn\n  );\n}\n\n\nexport default LoginHook;\n\n// export { LoginContext, LoginHook }\n\n// export const correct = () => {useContext(LoginContext)}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,aAAa,EAAEC,MAAM,QAAQ,OAAO;AACvD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAEpC,SAASM,SAASA,CAACC,IAAI,EAAE;EAAAC,EAAA;EACvBC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EACzB,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;;EAG7C;EACA;;EAGA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA,oBACEK,OAAA,CAACC,YAAY,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAACH,QAAQ;MAAEC;IAAW;EAAE;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;EACvD;EACA;EACA;EACA;EACA;EAAA;AAEJ;AAACV,EAAA,CArCQF,SAAS;AAAAa,EAAA,GAATb,SAAS;AAwClB,eAAeA,SAAS;;AAExB;;AAEA;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}