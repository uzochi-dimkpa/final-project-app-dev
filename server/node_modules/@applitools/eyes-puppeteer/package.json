{
  "name": "@applitools/eyes-puppeteer",
  "version": "1.23.0",
  "description": "Applitools Eyes SDK for Puppeteer",
  "keywords": [
    "eyes-puppeteer",
    "applitools",
    "eyes",
    "test automation",
    "visual regression",
    "automation",
    "testing",
    "tests",
    "puppeteer"
  ],
  "homepage": "https://applitools.com/docs/api-ref/sdk-api/puppeteer/javascript/",
  "license": "SEE LICENSE IN LICENSE",
  "author": {
    "name": "Applitools Team",
    "email": "team@applitools.com"
  },
  "main": "./dist/index.js",
  "types": "./types/index.d.ts",
  "files": [
    "dist",
    "types"
  ],
  "scripts": {
    "lint": "run --top-level eslint '**/*.ts'",
    "build": "run --top-level tspc --project ./tsconfig.build.json",
    "generate:tests": "NODE_OPTIONS='--experimental-import-meta-resolve --experimental-loader=@applitools/generic/dist/code-loader.js' generic ./test/generic/config.mjs",
    "test": "yarn test:coverage",
    "test:coverage": "APPLITOOLS_SHOW_LOGS=true APPLITOOLS_LOG_FILE=\"./logs/$(uuidgen).log\" APPLITOOLS_BATCH_NAME='JS Coverage Tests: eyes-puppeteer' APPLITOOLS_BATCH_ID=$(uuidgen) MOCHA_GROUP=coverage run --top-level mocha './test/generated-coverage/*.spec.js' --parallel --jobs ${MOCHA_JOBS:-15} --exit",
    "setup": "yarn puppeteer:setup",
    "puppeteer:setup": "PUPPETEER_PRODUCT=firefox node --eval 'import(\"puppeteer/install.mjs\").catch(() => import(\"puppeteer/install.js\"))'",
    "up:framework": "echo \"$(jq '.devDependencies.puppeteer = $ENV.APPLITOOLS_FRAMEWORK_VERSION' ./package.json)\" > ./package.json"
  },
  "dependencies": {
    "@applitools/eyes": "1.12.0",
    "@applitools/spec-driver-puppeteer": "1.3.0"
  },
  "devDependencies": {
    "@applitools/api-extractor": "^1.2.22",
    "@applitools/bongo": "^5.7.6",
    "@applitools/generic": "^3.5.2",
    "@applitools/test-utils": "^1.5.17",
    "@types/node": "^12.20.55",
    "puppeteer": "^21.5.0"
  },
  "peerDependencies": {
    "puppeteer": ">=5.3.0"
  },
  "engines": {
    "node": ">=12.13.0"
  },
  "publishConfig": {
    "access": "public"
  }
}